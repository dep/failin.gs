!RBIX
0
x
M
1
n
n
x
10
__script__
i
31
42
0
1
7
2
61
46
3
2
13
42
0
4
12
7
5
12
7
6
12
61
12
46
7
4
14
45
5
14
2
11
I
6
I
0
I
0
I
0
n
p
8
x
8
Rubinius
n
x
9
Continuum
x
11
open_module
n
x
15
__module_init__
M
1
n
n
x
9
Continuum
i
34
5
62
5
13
45
0
14
42
1
2
12
46
3
1
13
42
1
4
12
7
5
12
7
6
12
61
12
46
7
4
14
45
5
11
I
6
I
0
I
0
I
0
n
p
8
x
20
__verify_metaclass__
x
8
Rubinius
n
x
14
open_metaclass
n
x
18
__metaclass_init__
M
1
n
n
x
18
__metaclass_init__
i
48
5
62
22
26
25
0
5
7
0
60
44
46
1
1
14
5
53
2
44
47
3
0
27
8
45
42
4
5
22
46
6
1
10
36
8
44
22
17
0
14
1
23
8
45
31
12
24
11
I
4
I
1
I
0
I
0
n
p
7
s
6
inline
x
7
require
M
1
n
n
x
9
__block__
i
13
54
17
0
14
18
0
7
0
60
46
1
1
11
I
4
I
1
I
1
I
1
n
p
2
s
716
        int binary_search(VALUE ary, unsigned int r) {
            int upper = RARRAY_LEN(ary) - 1;
            int lower = 0;
            int idx = 0;
            ID value = rb_intern("value");

            while (lower <= upper) {
                idx = (lower + upper) / 2;

                VALUE continuumValue = rb_funcall(RARRAY_PTR(ary)[idx], value, 0);
                unsigned int l = NUM2UINT(continuumValue);
                if (l == r) {
                    return idx;
                }
                else if (l > r) {
                    upper = idx - 1;
                }
                else {
                    lower = idx + 1;
                }
            }
            return upper;
        }

x
1
c
p
5
I
0
I
b
I
4
I
c
I
d
x
33
./test/../lib/continuum_native.rb
p
1
x
7
builder
x
6
inline
x
9
Exception
n
x
3
===
p
9
I
2
I
a
I
f
I
b
I
19
I
26
I
24
I
27
I
30
x
33
./test/../lib/continuum_native.rb
p
1
x
1
e
x
13
attach_method
p
3
I
2
I
3
I
22
x
33
./test/../lib/continuum_native.rb
p
0
x
13
attach_method
p
3
I
0
I
1
I
1f
x
33
./test/../lib/continuum_native.rb
p
0
